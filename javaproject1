import java.util.LinkedList;
import java.util.Scanner;

class Vehicle {
    String licensePlate;
    String driverName;
    String department;

    public Vehicle(String licensePlate, String driverName, String department) {
        this.licensePlate = licensePlate;
        this.driverName = driverName;
        this.department = department;
    }

    @Override
    public String toString() {
        return "License Plate: " + licensePlate + ", Driver: " + driverName + ", Department: " + department;
    }
}

class ParkingLot {
    private int totalCapacity = 50;
    private int availableSpots = 50;
    private LinkedList<Vehicle> parkedVehicles = new LinkedList<>();

    
    public void registerVehicle(String licensePlate, String driverName, String department) {
        if (availableSpots > 0) {
            Vehicle vehicle = new Vehicle(licensePlate, driverName, department);
            parkedVehicles.add(vehicle);
            availableSpots--;
            System.out.println("Vehicle successfully registered!");
            System.out.println("Available Parking Spots: " + availableSpots + "/" + totalCapacity);
        } else {
            System.out.println("Error: Parking lot is full! Please try again later.");
        }
    }

    
    public void exitVehicle(String licensePlate) {
        boolean found = false;
        for (Vehicle vehicle : parkedVehicles) {
            if (vehicle.licensePlate.equals(licensePlate)) {
                parkedVehicles.remove(vehicle);
                availableSpots++;
                System.out.println("Vehicle successfully exited!");
                System.out.println("Available Parking Spots: " + availableSpots + "/" + totalCapacity);
                found = true;
                break;
            }
        }
        if (!found) {
            System.out.println("Error: Vehicle not found in the parking lot.");
        }
    }

    
    public void listParkedVehicles() {
        if (parkedVehicles.isEmpty()) {
            System.out.println("No vehicles are currently parked.");
        } else {
            System.out.println("Currently parked vehicles:");
            for (Vehicle vehicle : parkedVehicles) {
                System.out.println(vehicle);
            }
        }
    }
}

public class ParkingSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ParkingLot parkingLot = new ParkingLot();

        while (true) {
            System.out.println("\nParking System");
            System.out.println("1. Register Vehicle");
            System.out.println("2. Exit Vehicle");
            System.out.println("3. List All Parked Vehicles");
            System.out.println("4. Exit Program");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            scanner.nextLine();  

            switch (choice) {
                case 1:
                    
                    System.out.print("Enter License Plate: ");
                    String licensePlate = scanner.nextLine();
                    System.out.print("Enter Driver's Name: ");
                    String driverName = scanner.nextLine();
                    System.out.print("Enter Driver's Department: ");
                    String department = scanner.nextLine();
                    parkingLot.registerVehicle(licensePlate, driverName, department);
                    break;

                case 2:
                    
                    System.out.print("Enter License Plate: ");
                    licensePlate = scanner.nextLine();
                    parkingLot.exitVehicle(licensePlate);
                    break;

                case 3:
                    
                    parkingLot.listParkedVehicles();
                    break;

                case 4:
            
                    System.out.println("Exiting the program.");
                    scanner.close();
                    return;

                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }
}
